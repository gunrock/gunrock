# gunrock shared library cmake file
if(RAPIDJSON_FOUND)
  include_directories(${RAPIDJSON_INCLUDEDIR})
else()
  message(SEND_ERROR "RapidJson include directory not set.")
endif()

if(mgpu_INCLUDE_DIRS)
  include_directories(${mgpu_INCLUDE_DIRS})
else()
  message(SEND_ERROR "Modern GPU include directory not set.")
endif()

if(cub_INCLUDE_DIRS)
  include_directories(${cub_INCLUDE_DIRS})
else()
  message(SEND_ERROR "CUB library include directory not set.")
endif()

set (mgpu_SOURCE_FILES
  ${mgpu_SOURCE_DIRS}/mgpucontext.cu
  ${mgpu_SOURCE_DIRS}/mgpuutil.cpp)

set(HFILES_PUBLIC
  gunrock.h)

set(CUFILES
  #app/bfs/bfs_app.cu
  #app/bc/bc_app.cu
  #app/cc/cc_app.cu
  app/pr/pr_app.cu
  #app/sssp/sssp_app.cu
  util/test_utils.cu
  util/error_utils.cu
  util/misc_utils.cu
  util/str_to_T.cu
  ${mgpu_SOURCE_FILES}
  util/gitsha1.c)

cuda_add_library(gunrock ${LIB_TYPE}
  ${HFILES}
  ${CUHFILES}
  ${HFILES_PUBLIC}
  ${CUFILES}
  OPTIONS ${GENCODE} ${VERBOSE_PTXAS})

target_link_libraries(gunrock ${Boost_LIBRARIES})
if (METIS_LIBRARY)
	target_link_libraries(gunrock ${METIS_LIBRARY})
endif ()

# OpenMP on OS X/clang
if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
  if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
    link_directories("/opt/local/lib" "/opt/local/lib/libomp")
    include_directories("/opt/local/include" "/opt/local/include/libomp")
    target_link_libraries(gunrock "omp")
  endif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
endif(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
